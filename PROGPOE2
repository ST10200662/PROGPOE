Recipe.cs:
public class Recipe
{
    public string Name { get; set; }
    private List<Ingredient> ingredients;
    private List<Step> steps;
    private int calories;

    public Recipe(string name)
    {
        Name = name;
        ingredients = new List<Ingredient>();
        steps = new List<Step>();
        calories = 0;
    }

    public void AddIngredient(Ingredient ingredient)
    {
        ingredients.Add(ingredient);
        calories += ingredient.Calories;
    }

    public void AddStep(Step step)
    {
        steps.Add(step);
    }

    public void DisplayRecipe()
    {
        Console.WriteLine("Recipe: " + Name);
        Console.WriteLine("Ingredients:");
        foreach (Ingredient ingredient in ingredients)
        {
            Console.WriteLine("- " + ingredient.Name + ": " + ingredient.Quantity + " " + ingredient.Unit + ", " + ingredient.Calories + " calories, " + ingredient.FoodGroup);
        }
        Console.WriteLine("Steps:");
        int stepNumber = 1;
        foreach (Step step in steps)
        {
            Console.WriteLine(stepNumber + ". " + step.Description);
            stepNumber++;
        }
        Console.WriteLine("Total calories: " + calories);
    }

    public void ScaleRecipe(int factor)
Here's the full code for the RecipeApp, including the Recipe, Ingredient, and Step classes, as well as the Program class with all the functionality for Part 2:

Recipe.cs:
public class Recipe
{
    public string Name { get; set; }
    private List<Ingredient> ingredients;
    private List<Step> steps;
    private int calories;

    public Recipe(string name)
    {
        Name = name;
        ingredients = new List<Ingredient>();
        steps = new List<Step>();
        calories = 0;
    }

    public void AddIngredient(Ingredient ingredient)
    {
        ingredients.Add(ingredient);
        calories += ingredient.Calories;
    }

    public void AddStep(Step step)
    {
        steps.Add(step);
    }

    public void DisplayRecipe()
    {
        Console.WriteLine("Recipe: " + Name);
        Console.WriteLine("Ingredients:");
        foreach (Ingredient ingredient in ingredients)
        {
            Console.WriteLine("- " + ingredient.Name + ": " + ingredient.Quantity + " " + ingredient.Unit + ", " + ingredient.Calories + " calories, " + ingredient.FoodGroup);
        }
        Console.WriteLine("Steps:");
        int stepNumber = 1;
        foreach (Step step in steps)
        {
            Console.WriteLine(stepNumber + ". " + step.Description);
            stepNumber++;
        }
        Console.WriteLine("Total calories: " + calories);
    }

    public void ScaleRecipe(int factor)
    {
I apologize for the confusion in my previous response. Here's the complete code for the RecipeApp, including the Recipe, Ingredient, and Step classes, as well as the Program class with all the functionality for Part 2:

Recipe.cs:
public class Recipe
{
    public string Name { get; set; }
    private List<Ingredient> ingredients;
    private List<Step> steps;
    private int calories;

    public Recipe(string name)
    {
        Name = name;
        ingredients = new List<Ingredient>();
        steps = new List<Step>();
        calories = 0;
    }

    public void AddIngredient(Ingredient ingredient)
    {
        ingredients.Add(ingredient);
        calories += ingredient.Calories;
    }

    public void AddStep(Step step)
    {
        steps.Add(step);
    }

    public void DisplayRecipe()
    {
        Console.WriteLine("Recipe: " + Name);
        Console.WriteLine("Ingredients:");
        foreach (Ingredient ingredient in ingredients)
        {
            Console.WriteLine("- " + ingredient.Name + ": " + ingredient.Quantity + " " + ingredient.Unit + ", " + ingredient.Calories + " calories, " + ingredient.FoodGroup);
        }
        Console.WriteLine("Steps:");
        int stepNumber = 1;
        foreach (Step step in steps)
        {
            Console.WriteLine(stepNumber + ". " + step.Description);
            stepNumber++;
        }
        Console.WriteLine("Total calories: " + calories);
    }

Ingredient.cs:
public class Ingredient
{
    public string Name { get; set; }
    public double Quantity { get; set; }
    public string Unit { get; set; }
    public int Calories { get; set; }
    public string FoodGroup { get; set; }

    public Ingredient(string name, double quantity, string unit, int calories, string foodGroup)
    {
        Name = name;
        Quantity = quantity;
        Unit = unit;
        Calories = calories;
        FoodGroup = foodGroup;
    }
}
```

Step.cs:
public class Step
{
    public string Description { get; set; }

    public Step(string description)
    {
        Description = description;
    }
}
```

Program.cs:
using System;
using System.Collections.Generic;
using System.Linq;

namespace RecipeApp
{
    class Program
    {
        static List<Recipe> recipes;
        static Recipe currentRecipe;

        static void Main(string[] args)
        {
            recipes = new List<Recipe>();
            bool runProgram = true;

            while (runProgram)
            {
                Console.WriteLine("Please select an option:");
                Console.WriteLine("1. Enter a new recipe");
                Console.WriteLine("2. Display recipes");
                Console.WriteLine("3. Display recipe");  
                Console.WriteLine("4. Scale recipe quantities");
                Console.WriteLine("5. Reset recipe quantities");
                Console.WriteLine("6. Clear recipesHere's the remaining code for Program.cs:

        static void EnterRecipe()
        {
            Console.WriteLine("Please enter the name of the recipe:");
            string name = Console.ReadLine();
            Recipe recipe = new Recipe(name);
            bool addIngredients = true;
            while (addIngredients)
            {
                Console.WriteLine("Please enter an ingredient name (or type 'done' to finish):");
                string ingredientName = Console.ReadLine();
                if (ingredientName == "done")
                {
                    addIngredients = false;
                }
                else
                {
                    Console.WriteLine("Please enter the quantity of " + ingredientName + ":");
                    double quantity = double.Parse(Console.ReadLine());
                    Console.WriteLine("Please enter the unit of measurement:");
                    string unit = Console.ReadLine();
                    Console.WriteLine("Please enter the number of calories:");
                    int calories = int.Parse(Console.ReadLine());
                    Console.WriteLine("Please enter the food group:");
                    string foodGroup = Console.ReadLine();
                    Ingredient ingredient = new Ingredient(ingredientName, quantity, unit, calories, foodGroup);
                    recipe.AddIngredient(ingredient);
                }
            }
            bool addSteps = true;
            while (addSteps)
            {
                Console.WriteLine("Please enter a step description (or type 'done' to finish):");
                string stepDescription = Console.ReadLine();
                if (stepDescription == "done")
                {
                    addSteps = false;
                }
                else
                {
                    Step step = new Step(stepDescription);
Here's the remaining code for Program.cs:

        static void EnterRecipe()
        {
            Console.WriteLine("Please enter the name of the recipe:");
            string name = Console.ReadLine();
            Recipe recipe = new Recipe(name);
            bool addIngredients = true;
            while (addIngredients)
            {
                Console.WriteLine("Please enter an ingredient name (or type 'done' to finish):");
                string ingredientName = Console.ReadLine();
                if (ingredientName == "done")
                {
                    addIngredients = false;
                }
                else
                {
                    Console.WriteLine("Please enter the quantity of " + ingredientName + ":");
                    double quantity = double.Parse(Console.ReadLine());
                    Console.WriteLine("Please enter the unit of measurement:");
                    string unit = Console.ReadLine();
                    Console.WriteLine("Please enter the number of calories:");
                    int calories = int.Parse(Console.ReadLine());
                    Console.WriteLine("Please enter the food group:");
                    string foodGroup = Console.ReadLine();
                    Ingredient ingredient = new Ingredient(ingredientName, quantity, unit, calories, foodGroup);
                    recipe.AddIngredient(ingredient);
                }
            }
            bool addSteps = true;
            while (addSteps)
            {
                Console.WriteLine("Please enter a step description (or type 'done' to finish):");
                string stepDescription = Console.ReadLine();
                if (stepDescription == "done")
                {
                    addSteps = false;
                }
                else
                {
                    Step step = new Step(stepDescription);

Recipe.cs:
public class Recipe
{
    public string Name { get; set; }
    private List<Ingredient> ingredients;
    private List<Step> steps;
    private int calories;

    public Recipe(string name)
    {
        Name = name;
        ingredients = new List<Ingredient>();
        steps = new List<Step>();
        calories = 0;
    }

    public void AddIngredient(Ingredient ingredient)
    {
        ingredients.Add(ingredient);
        calories += ingredient.Calories;
    }

    public void AddStep(Step step)
    {
        steps.Add(step);
    }

    public void DisplayRecipe()
    {
        Console.WriteLine("Recipe: " + Name);
        Console.WriteLine("Ingredients:");
        foreach (Ingredient ingredient in ingredients)
        {
            Console.WriteLine("- " + ingredient.Name + ": " + ingredient.Quantity + " " + ingredient.Unit + ", " + ingredient.Calories + " calories, " + ingredient.FoodGroup);
        }
        Console.WriteLine
